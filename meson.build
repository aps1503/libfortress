project(
	'libfortress',
	['cpp', 'c'],
	default_options: [
		'cpp_std=gnu++17',
		'c_std=gnu11',
		'warning_level=3'
	],
	version: '0.0.1',
	meson_version: '>= 0.51',
	license: 'LGPL-3.0-or-later'
)

cxx = meson.get_compiler('cpp')
cc = meson.get_compiler('c')

extra_args = ['-Wvla', '-Wimplicit-fallthrough']

add_project_arguments(
	cxx.get_supported_arguments(extra_args),
	language: 'cpp'
)

add_project_arguments(
	cc.get_supported_arguments(extra_args),
	language: 'c'
)

config = configuration_data()
config.set('AUTOGEN_HEADER', '/* THIS FILE IS AUTOGENERATED, DO NOT EDIT */')
config.set('VERSION_NUMBER', meson.project_version())
config.set('COMPILER', cxx.get_id())
config.set('COMPILER_VERSION', cxx.version())

if get_option('debug')
	git =  find_program('git', required: false, native: true)

	if git.found()
		git_hash = run_command(git, 'rev-parse', '--short', 'HEAD').stdout().strip()
		if run_command(git, 'diff', '--quite').returncode() != 0
		        git_hash += '-dirty'
		endif
		config.set('GIT_HASH', git_hash)
	endif
else
	config.set('GIT_HASH', '')
endif

config.set('TARGET_SYS', target_machine.system())
config.set('TARGET_ARCH', target_machine.cpu())

config.set('BUILD_SYS', build_machine.system())
config.set('BUILD_ARCH', build_machine.cpu())


subdir('src')
subdir('test')

if get_option('gen_docs')
	message('Building documentation')
	subdir('docs')
endif

